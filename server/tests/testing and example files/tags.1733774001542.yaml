precalcs:
  - name: team.teammates
    type: list
    from:
      list: match.info.participants
      type: copy
      conditions:
        - item.teamId == participant.teamId
  - name: opponent.opponents
    type: list
    from:
      list: match.info.participants
      type: copy
      conditions:
        - item.teamId !== participant.teamId
  - name: team.avgKda
    type: avg
    list: precalcs.team.teammates
    value: challenges.kda
  - name: team.avgKillParticipation
    type: avg
    list: precalcs.team.teammates
    value: challenges.killParticipation
  - name: laneOpponent
    type: copy
    from:
      list: precalcs.opponent.opponents
      conditions:
        - item.teamPosition == participant.teamPosition
  - name: isLowPerformer
    type: boolean
    conditions:
      - participant.challenges.kda < precalcs.team.avgKda - 2
      - >-
        participant.challenges.killParticipation <
        precalcs.team.avgKillParticipation - .15
  - name: isHighPerformer
    type: boolean
    conditions:
      - participant.challenges.kda > precalcs.team.avgKda + 2
      - >-
        participant.challenges.killParticipation >
        precalcs.team.avgKillParticipation + .15
  - name: poorVision
    type: boolean
    conditions:
      - participant.challenges.visionScorePerMinute < 0.5
  - name: isSupport
    type: boolean
    conditions:
      - participant.teamPosition == "UTILITY"
  - name: isBot
    type: boolean
    conditions:
      - participant.teamPosition == "BOTTOM"
  - name: isJungle
    type: boolean
    conditions:
      - participant.teamPosition == "JUNGLE"
  - name: isMid
    type: boolean
    conditions:
      - participant.teamPosition == "MIDDLE"
  - name: isTop
    type: boolean
    conditions:
      - participant.teamPosition == "TOP"
  - name: minutes
    type: calculate
    value: match.info.gameDuration / 60
  - name: isAram
    type: boolean
    conditions:
      - match.info.gameMode == "ARAM"
  - name: team.botLaner
    type: copy
    from:
      list: precalcs.team.teammates
      conditions:
        - item.teamPosition == "BOTTOM"
  - name: team.jungler
    type: copy
    from:
      list: precalcs.team.teammates
      conditions:
        - item.teamPosition == "JUNGLE"
  - name: team.midLaner
    type: copy
    from:
      list: precalcs.team.teammates
      conditions:
        - item.teamPosition == "MIDDLE"
  - name: team.topLaner
    type: copy
    from:
      list: precalcs.team.teammates
      conditions:
        - item.teamPosition == "TOP"
  - name: team.support
    type: copy
    from:
      list: precalcs.team.teammates
      conditions:
        - item.teamPosition == "UTILITY"
  - name: team.botLaner.poorPerformer
    type: boolean
    conditions:
      - precalcs.team.botLaner.challenges.kda < 3
      - precalcs.team.botLaner.challenges.killParticipation < 0.4
  - name: team.jungler.poorPerformer
    type: boolean
    conditions:
      - precalcs.team.jungler.challenges.kda < 3
      - precalcs.team.jungler.challenges.killParticipation < 0.4
  - name: team.midLaner.poorPerformer
    type: boolean
    conditions:
      - precalcs.team.midLaner.challenges.kda < 3
      - precalcs.team.midLaner.challenges.killParticipation < 0.4
  - name: team.topLaner.poorPerformer
    type: boolean
    conditions:
      - precalcs.team.topLaner.challenges.kda < 3
      - precalcs.team.topLaner.challenges.killParticipation < 0.4
  - name: team.support.poorPerformer
    type: boolean
    conditions:
      - precalcs.team.support.challenges.kda < 3
      - precalcs.team.support.challenges.killParticipation < 0.4
tags:
  - key: blind
    text: Blind
    color: red
    description: Low vision score â€” place and destroy more wards.
    triggers:
      - precalcs.poorVision == true
      - precalcs.isAram == false
    value: participant.challenges.visionScorePerMinute
  - key: worstOfTheWorst
    text: Worst of the Worst
    color: red
    description: 'Congratulations, you did the worst!'
    triggers:
      - precalcs.isLowPerformer == true
      - participant.win == false
  - key: tagAlong
    text: Tag Along
    color: red
    description: Daily reminder to thank your carry
    triggers:
      - precalcs.isLowPerformer == true
      - participant.win == true
  - key: poor
    text: Poor
    color: red
    description: Low gold compared to lane opponent
    triggers:
      - participant.goldEarned < (precalcs.laneOpponent.goldEarned - 2000)
    value: participant.challenges.laningPhaseGoldExpAdvantage
  - key: coward
    text: Coward
    color: red
    description: 'Low kill participation and high KDA in a loss. Go get in there, coward.'
    triggers:
      - precalcs.isLowPerformer == true
      - participant.win == false
      - precalcs.isRemake == false
  - key: atm
    text: ATM
    color: red
    description: >-
      Making the enemy team rich, one death at a time. (Died a lot, had bounty
      gold)
    triggers:
      - >-
        (participant.deaths > 10 && precalcs.isAram == false) ||
        (participant.deaths > 20)
      - participant.bountyLevel > 1
  - key: honoraryCarry
    text: Honorary Carry
    color: red
    description: 'Supports support, you uh... do something else'
    triggers:
      - precalcs.isLowPerformer == true
      - precalcs.isSupport == true
      - precalcs.poorVision == true
  - key: jungleFullOfLife
    text: Jungle full of life
    color: red
    description: The camps miss you
    triggers:
      - precalcs.isJungle == true
      - participant.totalAllyJungleMinionsKilled/precalcs.minutes < 0.1
      - participant.totalEnemyJungleMinionsKilled/precalcs.minutes < 0.05
    value: >-
      participant.totalAllyJungleMinionsKilled/precalcs.minutes +
      participant.totalEnemyJungleMinionsKilled/precalcs.minutes
  - key: jungleDiff
    text: Jungle Diff (The camps won)
    color: red
    description: Imagine dying to neutral monsters
    triggers:
      - participant.deaths > participant.challenges.deathsByEnemyChamps
      - precalcs.isJungle == true
  - key: forgotYourButtons
    text: Forgot Your Buttons
    color: red
    description: Those summoner spells are meant to be used
    triggers:
      - >-
        (participant.summoner1Casts +
        participant.summoner2Casts)/precalcs.minutes < 0.1
    value: participant.summoner1Casts + participant.summoner2Casts
  - key: mapControl0
    text: 'Map Control: 0'
    color: red
    description: The minimap is the thing in the corner
    triggers:
      - participant.challenges.visionScorePerMinute < 0.1
      - participant.turretTakedowns < 2
      - participant.baronsKilled < 1
      - participant.dragonsKilled < 1
  - key: aimWhereTheyreGoing
    text: Aim where they're going
    color: red
    description: 'Only hit {value} skillshots'
    triggers:
      - participant.challenges.skillshotsHit/precalcs.minutes > 0
      - participant.challenges.skillshotsHit/precalcs.minutes < 0.1
    value: participant.challenges.skillshotsHit
  - key: allergicToDodging
    text: Allergic to Dodging
    color: red
    description: Have you tried pressing the right mouse button?
    triggers:
      - participant.challenges.skillshotsDodged/precalcs.minutes > 0
      - participant.challenges.skillshotsDodged/precalcs.minutes < 0.1
      - participant.damageTaken/participant.challenges.skillshotsDodged > 1000
  - key: bigThrow
    text: Big Throw
    color: red
    description: How do you lose with that gold lead?
    triggers:
      - participant.challenges.laningPhaseGoldExpAdvantage > 2000
      - participant.win == false
  - key: lastHitTutorialNeeded
    text: Last Hit Tutorial Needed
    color: red
    description: 'CS no good :('
    triggers:
      - participant.totalMinionsKilled/precalcs.minutes < 3
      - participant.isSupport == false
      - participant.isJungle == false
  - key: struggling
    text: Struggling
    color: red
    description: It ain't goin' so well
    triggers:
      - participant.challenges.kda < 1
      - participant.win == false
      - participant.challenges.killParticipation < .20
  - key: highDPS
    text: High DPS
    color: red
    description: 'Died {value} times per minute'
    triggers:
      - participant.deaths/precalcs.minutes > 0.85
    value: participant.deaths/precalcs.minutes
  - key: jackOfAllTrades
    text: Jack of All Trades
    color: gray
    description: Perfectly average at everything (perform on par with team averages)
    triggers:
      - >-
        precalcs.team.avgKda - .05 < participant.challenges.kda <
        precalcs.team.avgKda + .05
      - >-
        precalcs.team.avgKillParticipation - .05 <
        participant.challenges.killParticipation <
        precalcs.team.avgKillParticipation + .05
  - key: dragonsHoard
    text: Dragon's Hoard
    color: gray
    description: 'Can''t take it with you, friend â€” {value} unspent gold'
    triggers:
      - participant.goldEarned - participant.goldSpent > 2000
    value: participant.goldEarned - participant.goldSpent
  - key: perfectlyBalanced
    text: Perfectly Balanced
    color: gray
    description: As all things should be
    triggers:
      - participant.deaths == participant.kills == participant.assists
  - key: iFeelFine
    text: I feel fine
    color: gray
    description: 'Survived {value} fights with single-digit health'
    triggers:
      - participant.challenges.survivedSingleDigitHpCount > 1
    value: participant.challenges.survivedSingleDigitHpCount
  - key: afkFarmer
    text: AFK Farmer
    color: gray
    description: 'Nice farm, where were you in the fights?'
    triggers:
      - participant.totalMinionsKilled > 200
      - participant.challenges.killParticipation < 0.3
  - key: pve
    text: PVE
    color: gray
    description: How's the weather up there?
    triggers:
      - precalcs.isTop == true
      - >-
        participant.totalDamageDealtToChampions <
        participant.damageDealtToObjectives * 0.7
      - participant.kills < 3
      - participant.deaths < 3
  - key: iWorkAlone
    text: I work alone
    color: gray
    description: Get more solo kills than team kills
    triggers:
      - >-
        participant.challenges.soloKills > (participant.kills -
        participant.challenges.soloKills)
  - key: spongey
    text: Spongey
    color: gray
    description: 'Took {value} damage in a single game with few deaths'
    triggers:
      - participant.totalDamageTaken > 40000
      - participant.totalDamageTaken/precalcs.minutes > 1000
    value: participant.totalDamageTaken
  - key: objective
    text: Objective
    color: gray
    description: Towers > People
    triggers:
      - >-
        participant.damageDealtToObjectives >
        participant.totalDamageDealtToChampions * 1.5
  - key: keyboardWarrior
    text: Keyboard Warrior
    color: gray
    description: '{value} pings - We get it.'
    triggers:
      - >-
        (participant.allInPings + participant.assistMePings +
        participant.baitPings + participant.basicPings + participant.dangerPings
        + participant.enemyMissingPings + participant.enemyVisionPings +
        participant.getBackPings + participant.needVisionPings +
        participant.onMyWayPings) > 100
    value: >-
      participant.allInPings + participant.assistMePings + participant.baitPings
      + participant.basicPings + participant.dangerPings +
      participant.enemyMissingPings + participant.enemyVisionPings +
      participant.getBackPings + participant.needVisionPings +
      participant.onMyWayPings
  - key: autoAttackOnly
    text: Auto Attack Only
    color: gray
    description: Who needs abilities anyway?
    triggers:
      - >-
        (participant.spell1Casts + participant.spell2Casts +
        participant.spell3Casts + participant.spell4Casts) < precalcs.minutes
  - key: selfCare
    text: Self Care
    color: gray
    description: 'Tanky for yourself, not for your team'
    triggers:
      - participant.damageSelfMitigated > 100000
      - participant.totalDamageShieldedOnTeammates < 1000
  - key: decorationEnthusiast
    text: Decoration Enthusiast
    color: gray
    description: Those control wards sure look pretty
    triggers:
      - participant.challenges.controlWardsPlaced > 10
      - participant.visionScore < participant.challenges.controlWardsPlaced * 2
  - key: flashGaming
    text: Flash Gaming
    color: gray
    description: 'The F key is for Fight. {value} multikills after aggressive flashes'
    triggers:
      - participant.challenges.multikillsAfterAggressiveFlash > 0
    value: participant.challenges.multikillsAfterAggressiveFlash
  - key: monsterTamer
    text: Monster Tamer
    color: gray
    description: >-
      Let Baron and Dragon do the work (Got {value} kills with help from epic
      monsters)
    triggers:
      - participant.challenges.killsWithHelpFromEpicMonster > 3
    value: participant.challenges.killsWithHelpFromEpicMonster
  - key: blastEm
    text: Blast 'em
    color: gray
    description: 'Blast cone''d away from opponents {value} times'
    triggers:
      - participant.challenges.blastConeOppositeOpponentCount > 1
    value: participant.challenges.blastConeOppositeOpponentCount
  - key: stopRightThere
    text: Stop right there
    color: gray
    description: 'Immobilized enemies {value} times'
    triggers:
      - participant.challenges.immobilizedEnemiesCount/precalcs.minutes > 0.6
    value: participant.challenges.immobilizedEnemiesCount
  - key: selfless
    text: Selfless
    color: gray
    description: 'Died trying to save others, and succeeded {value} times. Also died a lot.'
    triggers:
      - participant.challenges.saveAllyFromDeath > 5
      - participant.deaths > 10
    value: participant.challenges.saveAllyFromDeath
  - key: alcoveGaming
    text: Alcove Gaming
    color: gray
    description: 'Got {value} takedowns in alcoves'
    triggers:
      - participant.challenges.takedownsInAlcove > 1
    value: participant.challenges.takedownsInAlcove
  - key: minionEater
    text: Minion Eater
    color: gray
    description: 'Killed 20 minions in 3 seconds {value} times'
    triggers:
      - participant.challenges.twentyMinionsIn3SecondsCount > 1
    value: participant.challenges.twentyMinionsIn3SecondsCount
  - key: hideAndSeekChampion
    text: Hide and Seek Champion
    color: gray
    description: >-
      They can't stop your recall if they can't see you (Recalled out of enemy
      vision {value} times)
    triggers:
      - participant.challenges.unseenRecalls/precalcs.minutes > 0.1
    value: participant.challenges.unseenRecalls
  - key: shyHerald
    text: Shy Herald
    color: gray
    description: 'The herald had performance anxiety (Took a herald, but didn''t use it)'
    triggers:
      - participant.challenges.turretsTakenWithRiftHerald == 0
      - participant.challenges.riftHeraldTakedowns > 1
  - key: dancePartner
    text: Dance Partner
    color: gray
    description: Made sure Herald had fun before work
    triggers:
      - participant.challenges.dancedWithRiftHerald > 0
  - key: snowBall
    text: Snowball
    color: gray
    description: 'Once you get ahead, you stay ahead'
    triggers:
      - >-
        participant.challenges.takedownsAfterGainingLevelAdvantage >
        participant.kills * 0.5
      - participant.kills > 3
      - participant.win == true
  - key: balancedDiet
    text: Balanced Diet
    color: gray
    description: Equal parts physical and magical damage
    triggers:
      - >-
        Math.abs(participant.physicalDamageDealtToChampions -
        participant.magicDamageDealtToChampions) < 1000
      - participant.totalDamageDealtToChampions > 10000
  - key: teamPlayer
    text: Team Player
    color: gray
    description: Happy to help
    triggers:
      - participant.assists > participant.kills * 3
      - participant.assists > 10
  - key: identityCrisis
    text: Identity Crisis
    color: gray
    description: Building against type
    triggers:
      - >
        (participant.physicalDamageDealtToChampions >
        participant.magicDamageDealtToChampions && 

        ["Ahri", "Viktor", "Syndra"].includes(participant.championName)) ||

        (participant.magicDamageDealtToChampions >
        participant.physicalDamageDealtToChampions && 

        ["Zed", "Talon", "Yasuo"].includes(participant.championName))
  - key: earlyBird
    text: Early Bird
    color: gray
    description: 'Great start, long game'
    triggers:
      - participant.challenges.takedownsFirstXMinutes > 5
      - match.info.gameDuration > 2400
  - key: mercenary
    text: Mercenary
    color: gray
    description: Your lane is wherever you're needed
    triggers:
      - participant.challenges.killsOnOtherLanesEarlyJungleAsLaner > 0
      - participant.challenges.killParticipation > 0.6
      - match.info.gameMode !== "ARAM"
  - key: survive
    text: Survive at all costs
    color: gray
    description: Staying alive > Being useful
    triggers:
      - participant.deaths < 3
      - participant.challenges.killParticipation < 0.4
      - match.info.gameDuration > 1500
  - key: scout
    text: Scout
    color: green
    description: 'High vision score, wards cleared'
    triggers:
      - participant.visionScorePerMinute > 1.5
      - participant.wardsKilled > 3
  - key: highPerformer
    text: You're welcome
    color: green
    description: >-
      High KDA and kill participation in a win, with teammates who lagged
      behind.
    triggers:
      - precalcs.isHighPerformer == true
      - participant.win == true
  - key: midIsMyNewBestFriend
    text: Mid is My New Best Friend
    color: green
    description: >-
      High kill participation and KDA as a support, with the bot lane doing
      poorly.
    triggers:
      - precalcs.isSupport == true
      - participant.challenges.killParticipation > 0.6
      - participant.challenges.kda > 4
      - precalcs.team.botLaner.challenges.kda < 3
      - precalcs.team.botLaner.challenges.killParticipation < 0.4
  - key: imTheCarryNow
    text: I'm the Carry Now
    color: green
    description: 'Dealt more damage as a support than the bot lane, in a win.'
    triggers:
      - precalcs.isSupport == true
      - >-
        participant.totalDamageDealtToChampions >
        precalcs.team.botLaner.totalDamageDealtToChampions
      - participant.win == true
  - key: forgettingSomeone
    text: Aren't you forgetting someone?
    color: gray
    description: >-
      Dealt more damage as a support than the bot lane, in a loss. Play a
      different role, maybe?
    triggers:
      - precalcs.isSupport == true
      - >-
        participant.totalDamageDealtToChampions >
        precalcs.team.botLaner.totalDamageDealtToChampions
      - participant.win == false
  - key: stomper
    text: Stomper
    color: green
    description: High gold lead against lane opponent
    triggers:
      - participant.goldEarned - precalcs.laneOpponent.goldEarned > 2000
      - match.info.gameMode !== "ARAM"
  - key: jungleKing
    text: Adequate Jungler
    color: green
    description: 'Secured {value} major objectives in the jungle'
    triggers:
      - participant.teamPosition == "JUNGLE"
      - >-
        participant.challenges.dragonTakedowns +
        participant.challenges.baronTakedowns +
        participant.challenges.riftHeraldTakedowns > 2
    value: >-
      participant.challenges.dragonTakedowns +
      participant.challenges.baronTakedowns +
      participant.challenges.riftHeraldTakedowns
  - key: counterJungler
    text: Counter Jungler
    color: green
    description: Dominated enemy jungle camps
    triggers:
      - participant.challenges.enemyJungleMonsterKills > 19
  - key: betterTogether
    text: Better Together
    color: green
    description: 'Team good together, team strong together.'
    triggers:
      - >-
        (participant.kills - participant.challenges.soloKills)/participant.kills
        >= 0.7
      - participant.challenges.kda > 4
      - participant.challenges.killParticipation > 0.7
      - match.info.gameMode !== "ARAM"
  - key: hatesArchitecture
    text: Hates Architecture
    color: green
    description: 'Destroyed {value} turrets'
    triggers:
      - participant.turretTakedowns > 4
    value: participant.turretTakedowns
  - key: niceDive
    text: 'Nice dive, idiot'
    color: green
    description: 'Killed {value} over-eager enemies'
    triggers:
      - participant.challenges.killsUnderOwnTurret >= 2
      - match.info.gameMode !== "ARAM"
    value: participant.challenges.killsUnderOwnTurret
  - key: coolTurret
    text: Cool Turret I guess
    color: green
    description: 'Killed enemies under their own turret {value} times'
    triggers:
      - participant.challenges.killsNearEnemyTurret > 2
      - match.info.gameMode !== "ARAM"
    value: participant.challenges.killsNearEnemyTurret
  - key: bountyHunter
    text: Bounty Hunter
    color: green
    description: 'Cashed in on {value} bounty gold'
    triggers:
      - participant.challenges.bountyGold > 1000
    value: participant.challenges.bountyGold
  - key: sneakySneaky
    text: Sneaky Sneaky
    color: green
    description: 'Stole {value} epic monsters'
    triggers:
      - >-
        (participant.challenges.epicMonsterSteals +
        participant.challenges.epicMonsterStealAssists) > 1
    value: >-
      participant.challenges.epicMonsterSteals +
      participant.challenges.epicMonsterStealAssists
  - key: darkness
    text: Darkness
    color: green
    description: The enemy team is playing with their monitors off
    triggers:
      - participant.challenges.controlWardsPlaced > 3
      - participant.wardsKilled > 5
  - key: laneKingdom
    text: Lane Kingdom
    color: green
    description: 'Huge CS lead of {value} over lane opponent'
    triggers:
      - participant.challenges.maxCsAdvantageOnLaneOpponent > 30
      - participant.win == true
      - match.info.gameMode !== "ARAM"
      - participant.teamPosition !== "JUNGLE"
    value: participant.challenges.maxCsAdvantageOnLaneOpponent
  - key: flawlessVictory
    text: Flawless Victory
    color: yellow
    description: Perfect game with high impact
    triggers:
      - participant.challenges.perfectGame == true
      - participant.challenges.killParticipation > 0.7
      - match.info.gameMode !== "ARAM"
  - key: noNo
    text: He's got a no no going
    color: yellow
    description: No deaths to champions in ARAM
    triggers:
      - match.info.gameMode == "ARAM"
      - participant.deaths == 0
  - key: pentakill
    text: PENTAKILL
    color: yellow
    description: Achieved the pinnacle of League
    triggers:
      - participant.pentaKills > 0
  - key: quadraKill
    text: Quadra get
    color: green
    description: Secured a quadra kill
    triggers:
      - participant.quadraKills > 0
  - key: comeback
    text: Don't ever say it's over if I'm breathin'
    color: yellow
    description: 'Turned a {value} kill deficit into victory'
    triggers:
      - participant.challenges.maxKillDeficit > 10
      - participant.win == true
      - participant.challenges.killParticipation > 0.7
      - participant.challenges.kda > 3
    value: participant.challenges.maxKillDeficit
  - key: legendary
    text: LEGENDARY
    color: yellow
    description: Multiple legendary kill streaks
    triggers:
      - participant.challenges.legendaryCount > 2
  - key: visionDomination
    text: Vision Domination
    color: yellow
    description: Complete vision control over the game
    triggers:
      - participant.challenges.visionScorePerMinute > 2
      - participant.wardsPlaced > 20
      - participant.challenges.visionScoreAdvantageLaneOpponent > 1.5
  - key: simplyTheBest
    text: Simply the best
    color: yellow
    description: Single-handedly took over the game
    triggers:
      - participant.challenges.soloKills > 5
      - participant.challenges.killParticipation > 0.7
      - participant.challenges.damagePerMinute > 1000
  - key: objectiveSupremacy
    text: Objective Supremacy
    color: yellow
    description: Controlled every major objective on the map
    triggers:
      - participant.challenges.dragonTakedowns > 3
      - participant.challenges.baronTakedowns > 1
      - participant.challenges.riftHeraldTakedowns > 1
      - match.info.gameMode !== "ARAM"
  - key: csGod
    text: CS God
    color: yellow
    description: 9+ CS per minute
    triggers:
      - participant.totalMinionsKilled/precalcs.minutes > 9
      - match.info.gameMode !== "ARAM"
  - key: damageDealer
    text: Damage Dealer
    color: yellow
    description: 50k+ damage to champions
    triggers:
      - participant.totalDamageDealtToChampions > 50000
  - key: carryingIsAKindOfSupporting
    text: 'Carrying is a kind of supporting, yes?'
    color: yellow
    description: >-
      Supporting a team of feeders to victory (Win a game as support with poor
      performing teammates)
    triggers:
      - participant.teamPosition == "UTILITY"
      - precalcs.isHighPerformer == true
      - precalcs.team.botLaner.poorPerformer == true
      - precalcs.team.jungler.poorPerformer == true
      - precalcs.team.midLaner.poorPerformer == true
      - precalcs.team.topLaner.poorPerformer == true
      - participant.win == true
  - key: justDoinMyJob
    text: Just doin' my job
    color: yellow
    description: >-
      Carrying a team of feeders to victory (Win a game as bot with poor
      performing teammates)
    triggers:
      - participant.teamPosition == "BOTTOM"
      - precalcs.isHighPerformer == true
      - precalcs.team.jungler.poorPerformer == true
      - precalcs.team.midLaner.poorPerformer == true
      - precalcs.team.topLaner.poorPerformer == true
      - precalcs.team.support.poorPerformer == true
      - participant.win == true
  - key: kingOfDaJungle
    text: King of da Jungle
    color: yellow
    description: >-
      Carrying a team of feeders to victory (Win a game as jungle with poor
      performing teammates)
    triggers:
      - participant.teamPosition == "JUNGLE"
      - precalcs.isHighPerformer == true
      - precalcs.team.botLaner.poorPerformer == true
      - precalcs.team.midLaner.poorPerformer == true
      - precalcs.team.topLaner.poorPerformer == true
      - precalcs.team.support.poorPerformer == true
      - participant.win == true
  - key: notSoMiddling
    text: Not so middling
    color: yellow
    description: >-
      Carrying a team of feeders to victory (Win a game as mid with poor
      performing teammates)
    triggers:
      - participant.teamPosition == "MIDDLE"
      - precalcs.isHighPerformer == true
      - precalcs.team.botLaner.poorPerformer == true
      - precalcs.team.jungler.poorPerformer == true
      - precalcs.team.topLaner.poorPerformer == true
      - precalcs.team.support.poorPerformer == true
      - participant.win == true
  - key: itsCalledTopLaneForAReason
    text: It's called top lane for a reason
    color: yellow
    description: >-
      Carrying a team of feeders to victory (Win a game as top with poor
      performing teammates)
    triggers:
      - participant.teamPosition == "TOP"
      - precalcs.isHighPerformer == true
      - precalcs.team.botLaner.poorPerformer == true
      - precalcs.team.jungler.poorPerformer == true
      - precalcs.team.midLaner.poorPerformer == true
      - precalcs.team.support.poorPerformer == true
      - participant.win == true
